<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangfj.product.stocks.persistence.PcmLockAttributeMapper">
    <resultMap id="BaseResultMap" type="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
        <id column="sid" property="sid" jdbcType="INTEGER"/>
        <result column="distributed_lock" property="distributedLock" jdbcType="VARCHAR"/>
        <result column="button" property="button" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    sid, distributed_lock, button
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from pcm_lock_attribute
        where sid = #{sid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcm_lock_attribute
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
    insert into pcm_lock_attribute (sid, distributed_lock, button
      )
    values (#{sid,jdbcType=INTEGER}, #{distributedLock,jdbcType=VARCHAR}, #{button,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
        insert into pcm_lock_attribute
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="distributedLock != null">
                distributed_lock,
            </if>
            <if test="button != null">
                button,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="distributedLock != null">
                #{distributedLock,jdbcType=VARCHAR},
            </if>
            <if test="button != null">
                #{button,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
        update pcm_lock_attribute
        <set>
            <if test="distributedLock != null">
                distributed_lock = #{distributedLock,jdbcType=VARCHAR},
            </if>
            <if test="button != null">
                button = #{button,jdbcType=INTEGER},
            </if>
        </set>
        where sid = #{sid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
    update pcm_lock_attribute
    set distributed_lock = #{distributedLock,jdbcType=VARCHAR},
      button = #{button,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
    <!-- 条件查询 -->
    <select id="selectListByParam" resultMap="BaseResultMap"
            parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
        select
        <include refid="Base_Column_List"/>
        from pcm_lock_attribute
        <where>
            <if test="distributedLock != null">
                and distributed_lock = #{distributedLock,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="getCountByParam" resultType="java.lang.Integer"
            parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
        select
        count(*)
        from pcm_lock_attribute
        <where>
            <if test="distributedLock != null">
                and distributed_lock = #{distributedLock,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="findListByParam" resultMap="BaseResultMap"
            parameterType="com.wangfj.product.stocks.domain.entity.PcmLockAttribute">
        select
        <include refid="Base_Column_List"/>
        from pcm_lock_attribute
        <where>
            <if test="sid != null">
                and sid = #{distributedLock}
            </if>
            <if test="distributedLock != null">
                and distributed_lock = #{distributedLock}
            </if>
            <if test="button != null">
                and button = #{button}
            </if>
        </where>
    </select>


</mapper>